name: Validar Quiz IoC, DIP e DI (Primeira Alternativa Correta)

on:
  push:
    paths:
      - '.github/workflows/quiz_validation.yml'

permissions:
  issues: write
  contents: read

jobs:
  validar_quiz:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Obter conteúdo da issue
        id: obter_issue
        uses: actions/github-script@v6
        with:
          script: |
            const issueTitulo = "Desafio quiz: IoC, DIP e DI";
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
            });

            const issue = issues.data.find(i => i.title === issueTitulo);

            if (!issue) {
              console.log(`Issue "<span class="math-inline">\{issueTitulo\}" não encontrada\.\`\);
return;
\}
core\.setOutput\('issueNumber', issue\.number\);
core\.setOutput\('issueBody', JSON\.stringify\(issue\.body\)\);
return issue\.body;
\- name\: Validar respostas do quiz
id\: validar\_respostas
uses\: actions/github\-script@v6
with\:
script\: \|
try \{
const issueBody \= JSON\.parse\('</span>{{ steps.obter_issue.outputs.issueBody }}');
              const issueNumber = ${{ steps.obter_issue.outputs.issueNumber }};

              if (!issueBody) return;

              const respostasCorretas = {
                "1": "Uma disciplina.",
                "2": "Sim.",
                "3": "Um padrão de design que permite injetar dependências, proporcionando baixo acoplamento.",
                "4": "*IoC* determina como as dependências devem ser resolvidas em uma aplicação, enquanto *DIP* refere-se ao processo de delegar o controle de criação de objetos a um mecanismo externo."
              };

              const respostasUsuario = {};
              const perguntas = issueBody.split("# ");

              perguntas.slice(1).forEach(pergunta => {
                const numeroPergunta = pergunta.split(" - ");
                const opcoes = pergunta.split("- [");

                opcoes.slice(1).forEach(opcao => {
                  if (opcao.startsWith("x")) {
                    respostasUsuario[numeroPergunta] = opcao.split("] ").trim();
                  }
                });
              });

              let feedback = "## Resultado do Quiz\n\n";
              let todasCor
