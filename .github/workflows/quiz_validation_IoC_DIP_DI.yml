name: Validar Quiz IoC, DIP e DI (Primeira Alternativa Correta)

on:
  workflow_dispatch:
    inputs:
      content_node_id:
        description: 'The content node ID (Issue ID)'
        required: true
        type: string
      project_id:
        description: 'The project ID'
        required: true
        type: string
      other_project_data:
        description: 'The full json payload of the github project event'
        required: true
        type: string
  push:
    paths:
      - '.github/workflows/quiz_validation.yml'

jobs:
  validar_quiz:
    runs-on: ubuntu-latest
    steps:
      - name: Get Issue Number from Node ID
        id: get_issue_number
        uses: actions/github-script@v6
        with:
          script: |
            const contentNodeId = "${{ github.event.inputs.content_node_id }}";
            const query = `
              query {
                node(id: "${contentNodeId}") {
                  ... on Issue {
                    number
                  }
                }
              }
            `;

            const response = await github.graphql(query);
            if (response && response.node && response.node.number) {
              return response.node.number;
            } else {
              core.setFailed("Failed to retrieve issue number from node ID.");
              return null;
            }

      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Obter conteúdo da issue
        id: obter_issue
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = ${{ steps.get_issue_number.outputs.result }};
            if (!issueNumber) return;

            const issueBody = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
            }).then(result => result.data.body);

            if (!issueBody) {
              console.log(`Issue number ${issueNumber} body not found.`);
              return;
            }

            return issueBody;

      - name: Validar respostas do quiz
        id: validar_respostas
        uses: actions/github-script@v6
        with:
          script: |
            const issueBody = ${{ steps.obter_issue.outputs.result }};
            const issueNumber = ${{ steps.get_issue_number.outputs.result }};
            if (!issueBody || !issueNumber) return;

            # ... (Your quiz validation logic) ...

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: feedback,
            });
